[{"/home/d3/Projects/React/github-jobs/src/index.js":"1","/home/d3/Projects/React/github-jobs/src/App.js":"2","/home/d3/Projects/React/github-jobs/src/reportWebVitals.js":"3","/home/d3/Projects/React/github-jobs/src/useFetchJobs.js":"4","/home/d3/Projects/React/github-jobs/src/Job.js":"5","/home/d3/Projects/React/github-jobs/src/JobPagination.js":"6"},{"size":500,"mtime":1608646903964,"results":"7","hashOfConfig":"8"},{"size":761,"mtime":1608710466338,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608646903964,"results":"10","hashOfConfig":"8"},{"size":2194,"mtime":1608718205316,"results":"11","hashOfConfig":"8"},{"size":1703,"mtime":1608709168561,"results":"12","hashOfConfig":"8"},{"size":899,"mtime":1608783922669,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"v5u8dn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/d3/Projects/React/github-jobs/src/index.js",[],["28","29"],"/home/d3/Projects/React/github-jobs/src/App.js",["30"],"import React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport { Container } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport JobsPaginatin from \"./JobPagination\";\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">Github Jobs</h1>\n      <JobsPaginatin page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing.</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />;\n      })}\n    </Container>\n  );\n}\n\nexport default App;\n","/home/d3/Projects/React/github-jobs/src/reportWebVitals.js",[],"/home/d3/Projects/React/github-jobs/src/useFetchJobs.js",[],"/home/d3/Projects/React/github-jobs/src/Job.js",[],"/home/d3/Projects/React/github-jobs/src/JobPagination.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":7,"column":18,"nodeType":"37","messageId":"38","endLine":7,"endColumn":27},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'setParams' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]